{"version":3,"sources":["app/reducers/walletSlice.js","constants/config.js","utils/contract.js","constants/marvel.js","components/Headers/ConnectButton.js","components/Headers/ConnectKeplrButton.js","components/Headers/Header.js","layouts/MainLayout.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["walletSlice","createSlice","name","initialState","connected","connection","address","reducers","setConnected","state","action","payload","console","log","setConnection","disconnected","connectState","wallet","connectedAddress","actions","contractAddress","web3","Web3","providers","HttpProvider","getEthBalance","abiData","abi","eth","Contract","getContract","a","getBalance","balance","ConnectButton","useState","setWallet","setBalance","useSelector","dispatch","useDispatch","connectWalletHandler","useCallback","window","ethereum","alert","on","accounts","toString","disconnectWalletHandler","networkId","request","method","chainId","type","className","toFixed","substring","onClick","ConnectKeplrButton","connectKeplrWalletHandler","keplr","enable","offlineSigner","getOfflineSigner","getAccounts","SigningCosmosClient","Header","style","marginTop","MainLayout","getLibrary","provider","library","chainType","blockchain","Web3Provider","pollingInterval","App","path","component","from","to","store","configureStore","reducer","walletReducer","middleware","getDefaultMiddleware","serializableCheck","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6a3b691f.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  connected: false,\r\n  connection: null,\r\n  address: null,\r\n};\r\n\r\nexport const walletSlice = createSlice({\r\n  name: 'wallet',\r\n  initialState,\r\n  // The `reducers` field lets us define reducers and generate associated actions\r\n  reducers: {\r\n    setConnected: (state, action) => {\r\n      state.connected = true;\r\n      state.address = action.payload;\r\n      console.log(\"setConnected\", state.address)\r\n    },\r\n    setConnection: (state, action) => {\r\n      console.log(\"setConnection\", action.payload)\r\n      state.connection = action.payload;\r\n    },\r\n    disconnected: (state) => {\r\n      state.connected = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const connectState = (state) => state.wallet.connected;\r\n\r\nexport const connectedAddress = (state) => state.wallet.address;\r\n\r\nexport const getConnection = (state) => state.wallet.connection;\r\n\r\nexport const { setConnected, setConnection, disconnected } = walletSlice.actions;\r\n\r\nexport default walletSlice.reducer;\r\n","// export const contractAddress = '0xdb87e8d95570582a5687749C406b2b9040500c02';\r\nexport const contractAddress = '0x61B631dFb8e6eB42C05f73BBf274688D2bd38951';\r\n// export const contractAddress = '0x382E6E5c8edBAcEeEFB02A3038c46FaBC6BBBC4b';\r\n// export const contractAddress = '0x4cC41516A1C294e63f4fAfcA2a52d37718Ae7e85';\r\nexport const nftAddress = '0x1FeE3daaB4A6545d508B2c7A1EC2566e6182D8E7';\r\n// export const rpcUrl = 'https://api.avax-test.network/ext/bc/C/rpc';\r\n// export const rpcUrl = 'https://api.avax-test.network/ext/bc/C/rpc';\r\nexport const rpcUrl = 'https://nd-936-032-631.p2pify.com/2a71e6ff68ace15d31eaf3947d81c4b4';\r\nexport const pinataApiKey = '6a5e06af53f751b23f58';\r\nexport const pinataSecretApiKey = 'd8490fda64b681c69ef14deb22aa4822579ef58efc5cef2b0edf260353b9df2f';\r\nexport const baseUri = \"https://gateway.pinata.cloud/ipfs/\";\r\n\r\nexport const limitNumOfNodes = 100;\r\nexport const payDeadline = 400;\r\nexport const nodeTypes = [\r\n    {\r\n        typeNum: 1,\r\n        title: \"HEIMDALL\",\r\n        imgPath: \"assets/img/freya.b02dd9d0.png\"\r\n    },\r\n    {\r\n        typeNum: 2,\r\n        title: \"FREYA\",\r\n        imgPath: \"assets/img/freya.b02dd9d0.png\"\r\n    },\r\n    {\r\n        typeNum: 3,\r\n        title: \"THOR\",\r\n        imgPath: \"assets/img/freya.b02dd9d0.png\"\r\n    },\r\n    {\r\n        typeNum: 4,\r\n        title: \"ODIN\",\r\n        imgPath: \"assets/img/freya.b02dd9d0.png\"\r\n    },\r\n]","import Web3 from 'web3';\r\nimport { MarvelABI } from '../constants/marvel';\r\nimport { rpcUrl, contractAddress } from \"../constants/config\";\r\n\r\nconst web3 = new Web3(new Web3.providers.HttpProvider(rpcUrl));\r\n// get smart contract interface using web3\r\nexport const getContract = (abiData, address) => {\r\n    const abi = abiData;\r\n    let contract = new web3.eth.Contract(abi , address);\r\n    return contract;\r\n}\r\n\r\nconst splitString = (str) => {\r\n    return str.split(\"#\");\r\n}\r\n\r\nconst contract = getContract(MarvelABI, contractAddress);\r\n\r\n// approve marvel token to marvel token contract address\r\nexport const approve = async (wallet) => {\r\n    var price = '1000000000000000000000';\r\n    // let amount = parseInt();\r\n    try{\r\n        let dataABI = contract.methods.approve(contractAddress, web3.utils.toWei(price, \"ether\")).encodeABI();\r\n        let txHash = await signTransaction(wallet, dataABI, 0);\r\n        return txHash;\r\n    } catch(err) {\r\n        console.log(err);\r\n        return null;\r\n    }\r\n}\r\n\r\n// get balance of token\r\nexport const getBalance = async (address) => {\r\n    let balance =await contract.methods.balanceOf(address).call();\r\n    return balance;\r\n}\r\n\r\nexport const getEthBalance = async (address) => {\r\n    let balance =await web3.eth.getBalance(address);\r\n    return balance;\r\n}\r\n\r\n// get total number of created nodes\r\nexport const getTotalNodeNum = async () => {\r\n    let totalNodeNum =await contract.methods.getTotalCreatedNodes().call();\r\n    return totalNodeNum;\r\n}\r\n\r\n// load nodes info from smart contract\r\n// return of smart contract is one string so split it using #\r\nexport const getNodesInfo = async (address) => {\r\n    let rawResponse = await contract.methods.getNodesInfo(address).call();\r\n    return splitString(rawResponse);\r\n}\r\n\r\n// get node type info(price, reward per day, total released)\r\nexport const getNodeType = async (typeNum) => {\r\n    let rawResponse = await contract.methods.getNodeType(typeNum).call();\r\n    return rawResponse;\r\n}\r\n\r\n// Create node with tokens\r\nexport const createNodeWithTokens = async (address, typeNum, name) => {\r\n    try{\r\n        let dataABI = contract.methods.createNodeWithTokens(typeNum, name).encodeABI();\r\n        let txHash = await signTransaction(address, dataABI, 0);\r\n        return txHash;\r\n    } catch(err) {\r\n        console.log(err);\r\n        return null;\r\n    }\r\n}\r\n\r\n// claim rewards of one node\r\nexport const cashoutNodeReward = async (address, creationTime) => {\r\n    try{\r\n        let dataABI = contract.methods.cashoutReward(creationTime).encodeABI();\r\n        let txHash = await signTransaction(address, dataABI, 0);\r\n        return txHash;\r\n    } catch(err) {\r\n        console.log(err);\r\n        return null;\r\n    }\r\n}\r\n\r\n// claim rewards of all nodes owned by account\r\nexport const cashoutAll = async (address) => {\r\n    try{\r\n        let dataABI = contract.methods.cashoutAll().encodeABI();\r\n        let txHash = await signTransaction(address, dataABI, 0);\r\n        return txHash;\r\n    } catch(err) {\r\n        console.log(err);\r\n        return null;\r\n    }\r\n}\r\n\r\n// claim rewards of nodes belong to specific node type\r\nexport const cashoutNodeTypeReward = async (address, nodeTypeNum) => {\r\n    try{\r\n        let dataABI = contract.methods.cashoutNodeTypeReward(nodeTypeNum).encodeABI();\r\n        let txHash = await signTransaction(address, dataABI, 0);\r\n        return txHash;\r\n    } catch(err) {\r\n        console.log(err);\r\n        return null;\r\n    }\r\n} \r\n\r\n// pay fees of one node\r\nexport const payNodeFee = async (address, creationTime, _etherAmount) => {\r\n    console.log(_etherAmount);\r\n    try{\r\n        let dataABI = contract.methods.payNodeFee(creationTime).encodeABI();\r\n        console.log(dataABI)\r\n        let txHash = await signTransaction(address, dataABI, _etherAmount);\r\n        return txHash;\r\n    } catch(err) {\r\n        console.log(err);\r\n        return null;\r\n    }\r\n}\r\n\r\n// pay fees of all nodes owned by account\r\nexport const payAll = async (address, _etherAmount) => {\r\n    try{\r\n        let dataABI = contract.methods.payAll().encodeABI();\r\n        let txHash = await signTransaction(address, dataABI, _etherAmount);\r\n        return txHash;\r\n    } catch(err) {\r\n        console.log(err);\r\n        return null;\r\n    }\r\n}\r\n\r\n// pay fees of nodes belong to specific node type\r\nexport const payNodeTypeFee = async (address, nodeTypeNum, _etherAmount) => {\r\n    try{\r\n        let dataABI = contract.methods.payNodeTypeFee(nodeTypeNum).encodeABI();\r\n        let txHash = await signTransaction(address, dataABI, _etherAmount);\r\n        return txHash;\r\n    } catch(err) {\r\n        console.log(err);\r\n        return null;\r\n    }\r\n} \r\n\r\n// sign transaction using metamask\r\nconst signTransaction = async (address, dataABI, _etherAmount) => {\r\n\r\n    const transactionParameters = {\r\n        to: contractAddress, // Required except during contract publications.\r\n        from: address, // must match user's active address.\r\n        data: dataABI,\r\n        gasLimit: \"0x5208\",\r\n        chainId: 43113,\r\n        value: parseInt(_etherAmount).toString(16),  // this should be hex !!!!\r\n      };\r\n    \r\n    //sign the transaction\r\n    try {\r\n        const txHash = await window.ethereum.request({\r\n          method: \"eth_sendTransaction\",\r\n          params: [transactionParameters],\r\n        });\r\n        return txHash;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}","export const MarvelABI = [{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"payees\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ERC20PaymentReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newLiquidityWallet\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldLiquidityWallet\",\"type\":\"address\"}],\"name\":\"LiquidityWalletUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"PayeeAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PaymentReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PaymentReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"SetAutomatedMarketMakerPair\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensSwapped\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethReceived\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensIntoLiqudity\",\"type\":\"uint256\"}],\"name\":\"SwapAndLiquify\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"}],\"name\":\"UpdateUniswapV2Router\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_isBlacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"typeNum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nodePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardPerDay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"addNewNodeType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"automatedMarketMakerPairs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"blacklistMalicious\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"boostReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cashoutAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cashoutFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"typeNum\",\"type\":\"uint256\"}],\"name\":\"cashoutNodeTypeReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blocktime\",\"type\":\"uint256\"}],\"name\":\"cashoutReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newTime\",\"type\":\"uint256\"}],\"name\":\"changeClaimTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"typeNum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"changeNodeFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"typeNum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nodePrice\",\"type\":\"uint256\"}],\"name\":\"changeNodePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"typeNum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardPerDay\",\"type\":\"uint256\"}],\"name\":\"changeNodeReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"typeNum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nodePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardPerDay\",\"type\":\"uint256\"}],\"name\":\"changeNodeType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"newVal\",\"type\":\"bool\"}],\"name\":\"changeSwapLiquify\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"typeNum\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"createNodeWithTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deadWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributionPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"futurFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"futurUsePool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getClaimTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNodeNumberOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"typeNum\",\"type\":\"uint256\"}],\"name\":\"getNodeType\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nodePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardPerDay\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalRewardReleased\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNodesCreatime\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNodesInfo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNodesLastClaims\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getRewardAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getRewardAmountOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalCreatedNodes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityPoolFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payAll\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_creationTime\",\"type\":\"uint256\"}],\"name\":\"payNodeFee\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"typeNum\",\"type\":\"uint256\"}],\"name\":\"payNodeTypeFee\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"payee\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"released\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"released\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"typeNum\",\"type\":\"uint256\"}],\"name\":\"removeNodeType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardManager\",\"outputs\":[{\"internalType\":\"contract RewardManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setAutomatedMarketMakerPair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nodeManagement\",\"type\":\"address\"}],\"name\":\"setNodeManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"shares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapTokensAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"totalReleased\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalReleased\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Router\",\"outputs\":[{\"internalType\":\"contract IJoeRouter02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"updateCashoutFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"updateFuturFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"wall\",\"type\":\"address\"}],\"name\":\"updateFuturWall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"updateLiquiditFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"updateRewardsFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"wall\",\"type\":\"address\"}],\"name\":\"updateRewardsWall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"updateRwSwapFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newVal\",\"type\":\"uint256\"}],\"name\":\"updateSwapTokensAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"updateUniswapV2Router\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]","import { useEffect, useState, useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n    setConnected,\r\n    connectState,\r\n    connectedAddress, \r\n    disconnected,\r\n} from '../../app/reducers/walletSlice';\r\nimport { getEthBalance } from 'utils/contract';\r\n\r\n\r\nfunction ConnectButton() {\r\n    const [wallet, setWallet] = useState(\"0x0\");\r\n    const [balance, setBalance] = useState(0);\r\n\r\n    const connected = useSelector(connectState);\r\n    const walletAddress = useSelector(connectedAddress);\r\n    const dispatch = useDispatch();\r\n\r\n    const checkWalletIsInstalled = () => {\r\n        const { ethereum } = window;\r\n\r\n        if (!ethereum) {\r\n            alert(\"Install MetaMask\");\r\n            return;\r\n        } else {\r\n            console.log(\"Ready to go\");\r\n        }\r\n    }\r\n\r\n    const connectWalletHandler = useCallback(async () => {\r\n        const { ethereum } = window;\r\n        if (!ethereum) {\r\n            alert(\"Install MetaMask\");\r\n            return;\r\n        }\r\n        \r\n        ethereum.on('accountsChanged', async function (accounts) {\r\n            let wallet = accounts[0];\r\n            if (wallet) {\r\n                let balance = await getEthBalance(wallet);\r\n                setBalance(balance); //set balance of token to balance variable\r\n                setWallet(wallet); // set connected wallet address\r\n                dispatch(setConnected(wallet.toString())) // update connected, address of store\r\n            } else { \r\n                // if disconnect account on metamask, disconnect account(set connected to false of store)\r\n                await disconnectWalletHandler(); \r\n            }\r\n        });\r\n        ethereum.on('networkChanged', async function (networkId) {\r\n            // if connected chain is not avalanche fuji test net, disconnect wallet\r\n            if(networkId !== '0x61') {\r\n                disconnectWalletHandler();\r\n            }\r\n        })\r\n          \r\n\r\n        try {\r\n            // request connect one account of metamask to current website\r\n            const accounts = await ethereum.request({ method: 'eth_requestAccounts' });\r\n            // get connected chain id\r\n            const chainId = await window.ethereum.request({ method: 'eth_chainId'});\r\n            console.log(chainId);\r\n\r\n            let wallet = accounts[0];\r\n            let balance = await getEthBalance(wallet);\r\n            setBalance(balance);\r\n            setWallet(wallet);\r\n            dispatch(setConnected(wallet.toString()))\r\n            \r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }, [connected, dispatch]);\r\n\r\n    const disconnectWalletHandler = () => {\r\n        setWallet('0x0');\r\n        dispatch(disconnected()); // update connected of store to false\r\n    }\r\n\r\n    const connectWalletButton = () => {\r\n        return (\r\n            <button onClick={connectWalletHandler} type=\"button\" className=\"btn btn-dark\">\r\n                Connect MetaMask\r\n            </button>\r\n        )\r\n    }\r\n\r\n    const disconnectWalletButton = () => {\r\n        // this is displayed after wallet is connected to site\r\n        return (\r\n            <div>\r\n                <button type=\"button\" className=\"mr-2 btn btn-dark\">\r\n                    {(balance/1000000000000000000).toFixed(3)}\r\n                </button>\r\n                <button type=\"button\" className=\"mr-2 btn btn-dark\">\r\n                    {wallet.substring(0, 6)}...{wallet.substring(38, 42)} \r\n                </button>\r\n                <button onClick={disconnectWalletHandler} type=\"button\" className=\"btn btn-dark\">\r\n                    Disconnect Wallet\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!connected ? connectWalletButton() : disconnectWalletButton()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConnectButton;","import { useState, useCallback } from 'react';\r\nimport {\r\n    SigningCosmosClient,\r\n    LcdClient, setupAuthExtension\r\n  } from \"@cosmjs/launchpad\";\r\n\r\n\r\nfunction ConnectKeplrButton() {\r\n    const [wallet, setWallet] = useState(\"0x0\");\r\n    const [balance, setBalance] = useState(0);\r\n    const [connected, setConnected] = useState(false);\r\n\r\n\r\n    const checkWalletIsInstalled = () => {\r\n        if (!window.keplr) {\r\n            alert(\"Please install keplr extension\");\r\n            return;\r\n        }\r\n    }\r\n\r\n    \r\n    const disconnectWalletHandler = () => {\r\n        setWallet('0x0');\r\n        setConnected(false);\r\n    }\r\n\r\n    const connectWalletButton = () => {\r\n        return (\r\n            <>\r\n                <button onClick={connectKeplrWalletHandler} type=\"button\" className=\"btn btn-dark\">\r\n                    Connect Keplr Wallet\r\n                </button>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const disconnectWalletButton = () => {\r\n        // this is displayed after wallet is connected to site\r\n        return (\r\n            <div>\r\n                <button type=\"button\" className=\"mr-2 btn btn-dark\">\r\n                    {(balance/1000000000000000000).toFixed(2)}\r\n                </button>\r\n                <button type=\"button\" className=\"mr-2 btn btn-dark\">\r\n                    {wallet}\r\n                </button>\r\n                <button onClick={disconnectWalletHandler} type=\"button\" className=\"btn btn-dark\">\r\n                    Disconnect Keplr Wallet\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const connectKeplrWalletHandler = useCallback(async()=> {\r\n        if (!window.keplr) {\r\n            alert(\"Please install keplr extension\");\r\n        } else {\r\n            const chainId = \"cosmoshub-4\";\r\n    \r\n            // Enabling before using the Keplr is recommended.\r\n            // This method will ask the user whether to allow access if they haven't visited this website.\r\n            // Also, it will request that the user unlock the wallet if the wallet is locked.\r\n            await window.keplr.enable(chainId);\r\n        \r\n            const offlineSigner = window.keplr.getOfflineSigner(chainId);\r\n        \r\n            // You can get the address/public keys by `getAccounts` method.\r\n            // It can return the array of address/public key.\r\n            // But, currently, Keplr extension manages only one address/public key pair.\r\n            // XXX: This line is needed to set the sender address for SigningCosmosClient.\r\n            const accounts = await offlineSigner.getAccounts();\r\n            setWallet(accounts[0]['address'].toString());\r\n            setConnected(true);\r\n\r\n            const [{ address }] = await offlineSigner.getAccounts();\r\n\r\n            console.log(address);\r\n        \r\n            // Initialize the gaia api with the offline signer that is injected by Keplr extension.\r\n            const cosmJS = new SigningCosmosClient(\r\n                \"https://lcd-cosmoshub.keplr.app\",\r\n                address,\r\n                offlineSigner,\r\n            );\r\n\r\n            // const client = LcdClient.withExtensions(\"https://lcd-cosmoshub.keplr.app\", setupAuthExtension);\r\n            // const { account_number, sequence } = (await client.auth.account(address))\r\n            // .result.value;\r\n\r\n\r\n            // check our balance\r\n            // const { value} = (await cosmJS.getAccount(address)).result;\r\n            // console.log(\"Account:\", account_number, sequence);\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            {!connected ? connectWalletButton() : disconnectWalletButton()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConnectKeplrButton;","import React from \"react\";\r\n// import WalletButton from \"components/ConnectWalletButton\";\r\nimport ConnectButton from \"./ConnectButton\";\r\nimport ConnectKeplrButton from \"./ConnectKeplrButton\";\r\n\r\nexport default function Header() {\r\n  return (\r\n        <>\r\n            {/* Header */}\r\n            <div className=\"row\">\r\n                \r\n                <div className=\"col-12\">\r\n                    <div className=\"float-right\">\r\n                        <ConnectButton />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\" style={{marginTop: \"10px\"}}>\r\n                \r\n                <div className=\"col-12\">\r\n                    <div className=\"float-right\">\r\n                        <ConnectKeplrButton />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React from \"react\";\r\n// import { Switch, Route, Redirect } from \"react-router-dom\";\r\n// import MainPage from \"pages/MainPage.js\";\r\n// import MintNFTPage from \"pages/MintNFTPage\";\r\nimport Header from \"components/Headers/Header\";\r\n// import NFTMarketplacePage from \"pages/NFTMarketplacePage\";\r\n// import SellingPage from \"pages/SellingPage\";\r\n\r\nexport default function MainLayout() {\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        {/* <AdminNavbar /> */}\r\n        {/* Header */}\r\n        <Header />\r\n        <div>\r\n          {/* <Switch>\r\n            <Route path=\"/main/\" exact component={MainPage} />\r\n            <Route path=\"/mint/\" exact component={MintNFTPage} />\r\n            <Route path=\"/marketplace/\" exact component={NFTMarketplacePage} />\r\n            <Route path=\"/sell/\" exact component={SellingPage} />\r\n            <Redirect from=\"/\" to=\"/sell/\" />\r\n          </Switch> */}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {Route, Switch, Redirect} from \"react-router-dom\";\r\nimport MainLayout from 'layouts/MainLayout.js';\r\nimport './App.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport { Web3ReactProvider } from '@web3-react/core';\r\nimport { Web3Provider } from '@ethersproject/providers'\r\n\r\nfunction getLibrary(provider) {\r\n  var library;\r\n\r\n  if (provider?.chainType === 'hmy') {\r\n    library = provider.blockchain\r\n  } else {\r\n    library = new Web3Provider(provider)\r\n    library.pollingInterval = 12000\r\n  }\r\n\r\n  return library\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Web3ReactProvider getLibrary={getLibrary}>\r\n      {/* <ThemeProvider theme={theme}>\r\n        <ModalProvider> */}\r\n          <Switch>\r\n              {/* add routes with layouts */}\r\n              <Route path=\"/\" component={MainLayout}/>\r\n              <Redirect from=\"*\" to=\"/\"/>\r\n          </Switch>\r\n          {/* </ModalProvider>\r\n      </ThemeProvider> */}\r\n    </Web3ReactProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport walletReducer from './reducers/walletSlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    wallet: walletReducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware({\r\n    serializableCheck: false\r\n  }),\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import App from \"./components/test\";\r\nimport { store } from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"assets/styles/bootstrap.min.css\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <Router> \r\n                <App />\r\n            </Router>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}